{"version":3,"sources":["components/Button.js","components/ButtonBox.js","components/Screen.js","components/wrapper.js","App.js","index.js"],"names":["Button","className","value","onClick","ButtonBox","children","Screen","mode","max","Wrapper","btnValues","toLocaleString","num","String","replace","removeSpaces","toString","App","useState","sign","res","calc","setCalc","numClickHandler","e","preventDefault","target","innerHTML","length","Number","commaClickHandler","includes","signClickHandler","equalsClickHandler","a","b","invertClickHandler","percentClickHandler","parseFloat","Math","pow","resetClickHandler","flat","map","btn","i","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d89852f.chunk.js","sourcesContent":["import \"./Button.css\";\r\n\r\n\r\n\r\nconst Button = ({className, value, onClick}) => {\r\n  return (\r\n    <button className={className} onClick={onClick}>\r\n      {value}\r\n    </button>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport default Button;","import \"./ButtonBox.css\";\r\n\r\n\r\n\r\nconst ButtonBox = ({children}) => {\r\n  return <div className=\"buttonBox\">{children}</div>;\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport default ButtonBox;","import {Textfit} from \"react-textfit\";\r\nimport \"./Screen.css\";\r\n\r\n\r\n// for textfit to install by cmd type npm i react-textfit --legacy-peer-deps\r\n\r\nconst Screen = ({value}) => {\r\n  return (\r\n    <Textfit className=\"screen\" mode=\"single\" max={70}>\r\n      {value}\r\n    </Textfit>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default Screen;","import \"./Wrapper.css\";\r\n\r\n\r\n\r\n\r\nconst Wrapper = ({children})=>{\r\n  return <div className=\"wrapper\">{children}</div>;\r\n};\r\n\r\n\r\nexport default Wrapper;","import React, {useState} from \"react\";\r\nimport Button from \"./components/Button\";\r\nimport ButtonBox from \"./components/ButtonBox\";\r\nimport Screen from \"./components/Screen\";\r\nimport Wrapper from \"./components/wrapper\";\r\n\r\nconst btnValues = [\r\n  [\"C\", \"+-\", \"%\", \"/\"],\r\n  [7, 8, 9, \"X\"],\r\n  [4, 5, 6, \"-\"],\r\n  [1, 2, 3, \"+\"],\r\n  [0, \".\", \"=\"],\r\n];\r\n\r\nconst toLocaleString = (num) =>\r\n  String(num).replace(/(?<!\\..*)(\\d)(?=(?:\\d{3})+(?:\\.|$))/g, \"$1 \");\r\n\r\nconst removeSpaces = (num) => num.toString().replace(/\\s/g, \"\");\r\n\r\nconst App = () => {\r\n  let [calc, setCalc] = useState({\r\n    sign: \"\",\r\n    num: 0,\r\n    res: 0,\r\n  });\r\n\r\n  const numClickHandler = (e) => {\r\n    e.preventDefault();\r\n    const value = e.target.innerHTML;\r\n\r\n    if (removeSpaces(calc.num).length < 16) {\r\n      setCalc({\r\n        ...calc,\r\n        num:\r\n          calc.num === 0 && value === \"0\"\r\n            ? \"0\"\r\n            : removeSpaces(calc.num) % 1 === 0\r\n            ? toLocaleString(Number(removeSpaces(calc.num + value)))\r\n            : toLocaleString(calc.num + value),\r\n        res: !calc.sign ? 0 : calc.res,\r\n      });\r\n    }\r\n  };\r\n\r\n  const commaClickHandler = (e) => {\r\n    e.preventDefault();\r\n    const value = e.target.innerHTML;\r\n\r\n    setCalc({\r\n      ...calc,\r\n      num: !calc.num.toString().includes(\".\") ? calc.num + value : calc.num,\r\n    });\r\n  };\r\n\r\n  const signClickHandler = (e) => {\r\n    e.preventDefault();\r\n    const value = e.target.innerHTML;\r\n\r\n    setCalc({\r\n      ...calc,\r\n      sign: value,\r\n      res: !calc.res && calc.num ? calc.num : calc.res,\r\n      num: 0,\r\n    });\r\n  };\r\n\r\n  const equalsClickHandler = () => {\r\n    if (calc.sign && calc.num) {\r\n      const math = (a, b, sign) =>\r\n        sign === \"+\"\r\n          ? a + b\r\n          : sign === \"-\"\r\n          ? a - b\r\n          : sign === \"X\"\r\n          ? a * b\r\n          : a / b;\r\n\r\n      setCalc({\r\n        ...calc,\r\n        res:\r\n          calc.num === \"0\" && calc.sign === \"/\"\r\n            ? \"Can't divide with 0\"\r\n            : toLocaleString(\r\n                math(\r\n                  Number(removeSpaces(calc.res)),\r\n                  Number(removeSpaces(calc.num)),\r\n                  calc.sign\r\n                )\r\n              ),\r\n        sign: \"\",\r\n        num: 0,\r\n      });\r\n    }\r\n  };\r\n\r\n  const invertClickHandler = () => {\r\n    setCalc({\r\n      ...calc,\r\n      num: calc.num ? toLocaleString(removeSpaces(calc.num) * -1) : 0,\r\n      res: calc.res ? toLocaleString(removeSpaces(calc.res) * -1) : 0,\r\n      sign: \"\",\r\n    });\r\n  };\r\n\r\n  const percentClickHandler = () => {\r\n    let num = calc.num ? parseFloat(removeSpaces(calc.num)) : 0;\r\n    let res = calc.res ? parseFloat(removeSpaces(calc.res)) : 0;\r\n\r\n    setCalc({\r\n      ...calc,\r\n      num: (num /= Math.pow(100, 1)),\r\n      res: (res /= Math.pow(100, 1)),\r\n      sign: \"\",\r\n    });\r\n  };\r\n\r\n  const resetClickHandler = () => {\r\n    setCalc({\r\n      ...calc,\r\n      sign: \"\",\r\n      num: 0,\r\n      res: 0,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Screen value={calc.num ? calc.num : calc.res} />\r\n      <ButtonBox>\r\n        {btnValues.flat().map((btn, i) => {\r\n          return (\r\n            <Button\r\n              key={i}\r\n              className={btn === \"=\" ? \"equals\" : \"\"}\r\n              value={btn}\r\n              onClick={\r\n                btn === \"C\"\r\n                  ? resetClickHandler\r\n                  : btn === \"+-\"\r\n                  ? invertClickHandler\r\n                  : btn === \"%\"\r\n                  ? percentClickHandler\r\n                  : btn === \"=\"\r\n                  ? equalsClickHandler\r\n                  : btn === \"/\" || btn === \"X\" || btn === \"-\" || btn === \"+\"\r\n                  ? signClickHandler\r\n                  : btn === \".\"\r\n                  ? commaClickHandler\r\n                  : numClickHandler\r\n              }\r\n            />\r\n          );\r\n        })}\r\n      </ButtonBox>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n"],"sourceRoot":""}